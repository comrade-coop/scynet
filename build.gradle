plugins {
	id "org.jetbrains.dokka" version '0.9.18'
}

allprojects {
	repositories {
		jcenter()
	}
}

subprojects {
	apply plugin: "java"
	apply plugin: "idea"

	dependencies {
		implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
		// https://github.com/kotlintest/kotlintest
		testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.3.0'
		// https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
		testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: '2.0.0-alpha0'
		// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
		compile group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha0'
		compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.0'
		// https://github.com/mockk/mockk
		testImplementation "io.mockk:mockk:1.9.3"
		// https://insert-koin.io/docs/2.0/documentation/reference/index.html
		compile 'org.koin:koin-core:2.0.1'
		testCompile 'org.koin:koin-test:2.0.1'
	}

	test {
		useJUnitPlatform()
	}

}

// https://github.com/Kotlin/dokka
dokka {
	outputFormat = 'kotlin-website'
	outputDirectory = "docs"

	kotlinTasks {
		subprojects.collectMany { project -> project.hasProperty("compileKotlin") ? [ project.compileKotlin ] : [] }
	}
}

if (hasProperty('buildScan')) {
	buildScan {
		termsOfServiceUrl = 'https://gradle.com/terms-of-service'
		termsOfServiceAgree = 'yes'
	}
}


subprojects.findAll { it.name != 'core' }.each {
	configure(it) {
		dependencies {
			implementation project(':core')
		}
	}
}