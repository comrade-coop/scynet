plugins {
    id "org.jetbrains.dokka" version '0.9.18'
//	id "idea"
}

version '1.0.0'

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "maven-publish"
    group 'ai.scynet'



    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        // https://github.com/kotlintest/kotlintest
        testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.3.0'
        // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
        testImplementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '2.0.0-alpha0'
        // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
        implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha0'
        implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.0'
        // https://github.com/mockk/mockk
        testImplementation "io.mockk:mockk:1.9.3"
        // https://insert-koin.io/docs/2.0/documentation/reference/index.html
        implementation group: 'org.koin', name: 'koin-core', version: '2.0.1'
        testImplementation 'org.koin:koin-test:2.0.1'
        compile "org.deeplearning4j:deeplearning4j-core:1.0.0-beta4"
        compile "org.nd4j:nd4j-native-platform:1.0.0-beta4"

        compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.1'
        compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.1'
        // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j18-impl
        compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j18-impl', version: '2.12.1'
    }

    test {
        useJUnitPlatform()
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                afterEvaluate {
                    artifactId = jar.archiveBaseName.get()
                }
            }
        }
    }
}

// https://github.com/Kotlin/dokka
dokka {
    outputFormat = 'kotlin-website'
    outputDirectory = "docs"

    kotlinTasks {
        subprojects.collectMany { project -> project.hasProperty("compileKotlin") ? [ project.compileKotlin ] : [] }
    }
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}


subprojects.findAll { it.name != 'core' }.each {
    configure(it) {
        dependencies {
            implementation project(path: ':core', configuration: 'default')
        }
    }
}

